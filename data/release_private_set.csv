,id,task,messages,detail,input,output_format,metric
0,d229f9f6-0c23-4384-83b2-a950558a6bb9,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/d229f9f6-0c23-4384-83b2-a950558a6bb9/ref.png', 'test': './data/private_set/d229f9f6-0c23-4384-83b2-a950558a6bb9/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
1,60ee7335-e384-43c0-9585-87d585417931,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/60ee7335-e384-43c0-9585-87d585417931/ref.png', 'test': './data/private_set/60ee7335-e384-43c0-9585-87d585417931/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
2,89d14150-0e21-41ba-80ac-4544c5fe12c3,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/89d14150-0e21-41ba-80ac-4544c5fe12c3/ref.png', 'test': './data/private_set/89d14150-0e21-41ba-80ac-4544c5fe12c3/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
3,3787aad0-1a0d-44e9-a6f6-0f4d3abf3768,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/3787aad0-1a0d-44e9-a6f6-0f4d3abf3768/ref.png', 'test': './data/private_set/3787aad0-1a0d-44e9-a6f6-0f4d3abf3768/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
4,1e4b3b9a-6ff9-46fb-8e24-1d027096a4bc,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/1e4b3b9a-6ff9-46fb-8e24-1d027096a4bc/ref.png', 'test': './data/private_set/1e4b3b9a-6ff9-46fb-8e24-1d027096a4bc/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
5,f5cc0c79-cc35-48e0-a6ca-ae89efe48262,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/f5cc0c79-cc35-48e0-a6ca-ae89efe48262/ref.png', 'test': './data/private_set/f5cc0c79-cc35-48e0-a6ca-ae89efe48262/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
6,50dbc1b1-c8f3-4e16-b82d-f0e70fe5546a,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/50dbc1b1-c8f3-4e16-b82d-f0e70fe5546a/ref.png', 'test': './data/private_set/50dbc1b1-c8f3-4e16-b82d-f0e70fe5546a/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
7,b1624219-ba9b-4522-8082-cb1ad87ccbcf,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/b1624219-ba9b-4522-8082-cb1ad87ccbcf/ref.png', 'test': './data/private_set/b1624219-ba9b-4522-8082-cb1ad87ccbcf/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
8,af6240fb-9964-4c1a-a3c8-538ddc75bc75,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/af6240fb-9964-4c1a-a3c8-538ddc75bc75/ref.png', 'test': './data/private_set/af6240fb-9964-4c1a-a3c8-538ddc75bc75/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
9,6892e26f-6b02-4208-a3a1-ef58225269b9,contour_extraction,"Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","{'ref': './data/private_set/6892e26f-6b02-4208-a3a1-ef58225269b9/ref.png', 'test': './data/private_set/6892e26f-6b02-4208-a3a1-ef58225269b9/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
10,fb22980b-6373-48b3-b198-079cb2b148c1,contour_extraction,"Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","{'ref': './data/private_set/fb22980b-6373-48b3-b198-079cb2b148c1/ref.png', 'test': './data/private_set/fb22980b-6373-48b3-b198-079cb2b148c1/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
11,e87354fb-7da9-4e14-98c7-1dbfe63323d6,contour_extraction,"Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Detect all the pattern using ref image and get the masks (pixel-level) of all the pattern. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between pattern contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","{'ref': './data/private_set/e87354fb-7da9-4e14-98c7-1dbfe63323d6/ref.png', 'test': './data/private_set/e87354fb-7da9-4e14-98c7-1dbfe63323d6/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
12,e42f0357-09d9-405d-b81b-29c539a54806,count,Count the pattern on the images. Give the count of pattern by using variable result. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Count the pattern on the images. Give the count of pattern by using variable result. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/e42f0357-09d9-405d-b81b-29c539a54806/ref.png'},float,MAE
13,eea0034c-bb4d-4429-bd2d-669080ccefee,count,Count the pattern on the images. Give the count of pattern by using variable result. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Count the pattern on the images. Give the count of pattern by using variable result. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/eea0034c-bb4d-4429-bd2d-669080ccefee/ref.png'},float,MAE
14,73ae9f52-9b97-485b-b7d9-7cb4392fde27,distance,Calculate the distance between two pattern centroid. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Calculate the distance between two pattern centroid. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/73ae9f52-9b97-485b-b7d9-7cb4392fde27/ref.png'},float,MAE
15,defcb7b7-a8f6-41f3-89ab-eaac465a9af2,distance,Calculate the distance between two pattern centroid. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Calculate the distance between two pattern centroid. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/defcb7b7-a8f6-41f3-89ab-eaac465a9af2/ref.png'},float,MAE
16,d538cad6-b635-49a2-b2c2-23804cc77941,angle_from_origin,"Calculate the angle of the pattern centroid (left top is origin, angle calculate from the top). (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Calculate the angle of the pattern centroid (left top is origin, angle calculate from the top). (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)",{'ref': './data/private_set/d538cad6-b635-49a2-b2c2-23804cc77941/ref.png'},float,MAE
17,82d14719-0d8b-4453-b1a6-2fba1019a48d,length_of_edge,Find the contour of pattern using ostu.         Calculate the total length of the edges at the pixel level. (Use arcLength) (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Find the contour of pattern using ostu.         Calculate the total length of the edges at the pixel level. (Use arcLength) (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/82d14719-0d8b-4453-b1a6-2fba1019a48d/ref.png'},float,MAE
18,9c711adf-ea3d-4be0-9671-d9f1e5f817d2,length_of_edge,Find the contour of pattern using ostu.         Calculate the total length of the edges at the pixel level. (Use arcLength) (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Find the contour of pattern using ostu.         Calculate the total length of the edges at the pixel level. (Use arcLength) (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/9c711adf-ea3d-4be0-9671-d9f1e5f817d2/ref.png'},float,MAE
19,7a95e041-ed50-429f-a045-913c8db1149d,area,"Calculate the area of all the pattern in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Calculate the area of all the pattern in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)",{'ref': './data/private_set/7a95e041-ed50-429f-a045-913c8db1149d/ref.png'},float,MAE
20,13475aaa-e96d-4504-9ca4-c6477f3bac8c,area,"Calculate the area of all the pattern in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)","Calculate the area of all the pattern in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.)",{'ref': './data/private_set/13475aaa-e96d-4504-9ca4-c6477f3bac8c/ref.png'},float,MAE
21,069a6bb3-9799-4cb4-aa0e-c6014eeaf0e4,density,Count the pattern on the images.  The picture area is 42 square meters. Calculate the density (count/per square meters) of the pattern. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Count the pattern on the images.  The picture area is 42 square meters. Calculate the density (count/per square meters) of the pattern. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/069a6bb3-9799-4cb4-aa0e-c6014eeaf0e4/ref.png'},float,MAE
22,6c53f805-ffb0-46bf-a167-d936e613aad3,density,Count the pattern on the images.  The picture area is 30 square meters. Calculate the density (count/per square meters) of the pattern. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),Count the pattern on the images.  The picture area is 30 square meters. Calculate the density (count/per square meters) of the pattern. (Give the final answer in float or int using result variable. The graylevel of pattern is larger than background. Please use image processing method (such as otsu) to get the binary mask.),{'ref': './data/private_set/6c53f805-ffb0-46bf-a167-d936e613aad3/ref.png'},float,MAE
23,f3006f6c-f2ab-441c-8094-68087a9cfa48,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/f3006f6c-f2ab-441c-8094-68087a9cfa48/ref.png', 'test': './data/private_set/f3006f6c-f2ab-441c-8094-68087a9cfa48/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
24,82bee31f-5180-495a-bdc8-a38bd25840b3,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/82bee31f-5180-495a-bdc8-a38bd25840b3/ref.png', 'test': './data/private_set/82bee31f-5180-495a-bdc8-a38bd25840b3/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
25,9740656a-1bd7-41bf-92fe-e1066352a3be,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/9740656a-1bd7-41bf-92fe-e1066352a3be/ref.png', 'test': './data/private_set/9740656a-1bd7-41bf-92fe-e1066352a3be/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
26,904dae1e-9c20-4fd4-8aa1-f4b13505ff02,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/904dae1e-9c20-4fd4-8aa1-f4b13505ff02/ref.png', 'test': './data/private_set/904dae1e-9c20-4fd4-8aa1-f4b13505ff02/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
27,beceeedf-0310-4838-9804-78e90f3095b9,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/beceeedf-0310-4838-9804-78e90f3095b9/ref.png', 'test': './data/private_set/beceeedf-0310-4838-9804-78e90f3095b9/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
28,d2f57f9d-e317-459c-a5c5-ab30ab30bcec,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/d2f57f9d-e317-459c-a5c5-ab30ab30bcec/ref.png', 'test': './data/private_set/d2f57f9d-e317-459c-a5c5-ab30ab30bcec/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
29,0b0fdab4-94a7-4792-8f8e-760db1004a0d,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/0b0fdab4-94a7-4792-8f8e-760db1004a0d/ref.png', 'test': './data/private_set/0b0fdab4-94a7-4792-8f8e-760db1004a0d/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
30,1e85ba59-a67f-45d5-b4a7-de7e609ba11f,alignment,Align reference with test images for range 20 pixels. Find the difference between two images. Supply the end result as a PIL.Image object,Covert reference and test image into gray (float). Align reference with test by minimizing the residual by rolling across dx dy for range 20 pixels. Calculate the residual of shifted reference and test. Set 30 pixel border of residual to 0 (Do not use pad). Display where the residual > 2.5*IQR. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/1e85ba59-a67f-45d5-b4a7-de7e609ba11f/ref.png', 'test': './data/private_set/1e85ba59-a67f-45d5-b4a7-de7e609ba11f/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
31,2b72fe6d-9a42-4be8-84d9-118330c1f6fc,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/2b72fe6d-9a42-4be8-84d9-118330c1f6fc/ref.png', 'test': './data/private_set/2b72fe6d-9a42-4be8-84d9-118330c1f6fc/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
32,3a462e7c-8cb0-406f-87d0-1c0398740cbf,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/3a462e7c-8cb0-406f-87d0-1c0398740cbf/ref.png', 'test': './data/private_set/3a462e7c-8cb0-406f-87d0-1c0398740cbf/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
33,bcf572d5-1180-4c56-bf3f-953fbb764c09,rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/bcf572d5-1180-4c56-bf3f-953fbb764c09/ref.png', 'test': './data/private_set/bcf572d5-1180-4c56-bf3f-953fbb764c09/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
34,c611d15e-66eb-4d17-b2c5-e7a51fdae985,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/c611d15e-66eb-4d17-b2c5-e7a51fdae985/ref.png', 'test': './data/private_set/c611d15e-66eb-4d17-b2c5-e7a51fdae985/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
35,1b29e12b-1124-4773-98dc-4fffa0b48e15,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/1b29e12b-1124-4773-98dc-4fffa0b48e15/ref.png', 'test': './data/private_set/1b29e12b-1124-4773-98dc-4fffa0b48e15/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
36,d4838eaa-0c77-4373-bb30-98b64c6cb5f2,alignment_rotation,Adjust the orientation of the refence image using the test image. Display where the difference. Supply the end result as a PIL.Image object,Detect SIFT features in both the reference and test images. Match features using a Brute Force matcher. Estimate the rotation angle and translation using RANSAC. Rotate the reference image using the estimated homography matrix. Remove the noise of rotated referece image and test image. Calculate the residual using gray images and set 30 pixel border of residual to 0. Display where the outlier of residual in binary mask and remove small objects. Supply the end result as a PIL.Image object,"{'ref': './data/private_set/d4838eaa-0c77-4373-bb30-98b64c6cb5f2/ref.png', 'test': './data/private_set/d4838eaa-0c77-4373-bb30-98b64c6cb5f2/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
37,07747317-8ee3-42f1-a928-d90624995219,contour_extraction,"Detect all the broccoli using ref image and get the masks (pixel-level) of all the broccoli. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between broccoli contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","Detect all the broccoli using ref image and get the masks (pixel-level) of all the broccoli. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between broccoli contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","{'ref': './data/private_set/07747317-8ee3-42f1-a928-d90624995219/ref.png', 'test': './data/private_set/07747317-8ee3-42f1-a928-d90624995219/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
38,5e2489d6-77b6-4c4f-94e2-1ad46a8825c7,contour_extraction,"Detect all the broccoli using ref image and get the masks (pixel-level) of all the broccoli. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between broccoli contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","Detect all the broccoli using ref image and get the masks (pixel-level) of all the broccoli. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between broccoli contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","{'ref': './data/private_set/5e2489d6-77b6-4c4f-94e2-1ad46a8825c7/ref.png', 'test': './data/private_set/5e2489d6-77b6-4c4f-94e2-1ad46a8825c7/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
39,98ce0d0d-e467-4a20-91b3-a554ddc8b7f3,contour_extraction,"Detect all the bottle using ref image and get the masks (pixel-level) of all the bottle. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between bottle contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","Detect all the bottle using ref image and get the masks (pixel-level) of all the bottle. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between bottle contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","{'ref': './data/private_set/98ce0d0d-e467-4a20-91b3-a554ddc8b7f3/ref.png', 'test': './data/private_set/98ce0d0d-e467-4a20-91b3-a554ddc8b7f3/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
40,dbbb2212-2e5a-4140-b069-3ef449980993,contour_extraction,"Detect all the bowl using ref image and get the masks (pixel-level) of all the bowl. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Get the mask which represent the overlap between bowl contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","Detect all the bowl using ref image and get the masks (pixel-level) of all the bowl. (If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use object detection + segmentation model.)Convert two image into gray. Get the residual between two image (based on test image). Get the residual > 20. Get the mask which represent the overlap between bowl contour and the residual outlier. (No overlap is possible)Supply the end result as a PIL.Image.uint8 (Do not use list). (If the mask is bool please multiply 255. Give the final answer in float or int using result variable.)","{'ref': './data/private_set/dbbb2212-2e5a-4140-b069-3ef449980993/ref.png', 'test': './data/private_set/dbbb2212-2e5a-4140-b069-3ef449980993/test.png'}","mask(graylevel, foreground: 255, background: 0)",IOU
41,b8ff6e57-4c87-4212-92a2-04bfb81e2809,count,Count the bench on the images. Give the count of bench by using variable result. (Give the final answer in float or int using result variable.),Count the bench on the images. Give the count of bench by using variable result. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/b8ff6e57-4c87-4212-92a2-04bfb81e2809/ref.png'},float,MAE
42,e7da471f-a409-4f11-a295-ce45738db883,count,Count the airplane on the images. Give the count of airplane by using variable result. (Give the final answer in float or int using result variable.),Count the airplane on the images. Give the count of airplane by using variable result. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/e7da471f-a409-4f11-a295-ce45738db883/ref.png'},float,MAE
43,b6d1fc0e-0157-4bc1-bb89-c7aa0d030816,count,Count the bear on the images. Give the count of bear by using variable result. (Give the final answer in float or int using result variable.),Count the bear on the images. Give the count of bear by using variable result. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/b6d1fc0e-0157-4bc1-bb89-c7aa0d030816/ref.png'},float,MAE
44,1e3e6a93-1eb5-4ccf-ba07-ea3d5ce6b828,area,"Calculate the area of all the bench in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)","Calculate the area of all the bench in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)",{'ref': './data/private_set/1e3e6a93-1eb5-4ccf-ba07-ea3d5ce6b828/ref.png'},float,MAE
45,5d43fb15-2634-4338-a8fa-d428ebfcc97e,area,"Calculate the area of all the airplane in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)","Calculate the area of all the airplane in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)",{'ref': './data/private_set/5d43fb15-2634-4338-a8fa-d428ebfcc97e/ref.png'},float,MAE
46,c55e4ce2-24ab-4c00-994e-3a6492ad1327,area,"Calculate the area of all the bear in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)","Calculate the area of all the bear in pixel level.(If the objects is pattern, you can use image processing such as otsu to get the pattern. Otherwise, you can use segmentation model.)  (Give the final answer in float or int using result variable.)",{'ref': './data/private_set/c55e4ce2-24ab-4c00-994e-3a6492ad1327/ref.png'},float,MAE
47,c49e5bfb-7b8f-4c4d-a873-998fb4256d17,density,Count the banana on the images.  The picture area is 75 square meters. Calculate the density (count/per square meters) of the banana. (Give the final answer in float or int using result variable.),Count the banana on the images.  The picture area is 75 square meters. Calculate the density (count/per square meters) of the banana. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/c49e5bfb-7b8f-4c4d-a873-998fb4256d17/ref.png'},float,MAE
48,2a49eacb-9030-46cd-9425-1c14022d6e98,density,Count the bear on the images.  The picture area is 41 square meters. Calculate the density (count/per square meters) of the bear. (Give the final answer in float or int using result variable.),Count the bear on the images.  The picture area is 41 square meters. Calculate the density (count/per square meters) of the bear. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/2a49eacb-9030-46cd-9425-1c14022d6e98/ref.png'},float,MAE
49,33ddb476-7cff-496d-a01b-597d58f90bfb,density,Count the bottle on the images.  The picture area is 40 square meters. Calculate the density (count/per square meters) of the bottle. (Give the final answer in float or int using result variable.),Count the bottle on the images.  The picture area is 40 square meters. Calculate the density (count/per square meters) of the bottle. (Give the final answer in float or int using result variable.),{'ref': './data/private_set/33ddb476-7cff-496d-a01b-597d58f90bfb/ref.png'},float,MAE
